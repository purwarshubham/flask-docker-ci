# This workflow runs pytest and builds the docker image

name: Run Pytest and Build Docker Image

on:
  push:
    branches: [main] # Triggers the workflow every time code is pushed to the main branch

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout node
        uses: actions/checkout@v3 # Fetch your repository's source code - Clones the latest code from your GitHub repo into the runner

      - name: setup python
        uses: actions/setup-python@v5 # Installs Python 3.10 so you can run your app and tests
        with:
          python-version: '3.10'

      - name: Install Python dependencies # Installs packages from requirements.txt + test tools
        run: pip install -r requirements.txt

      - name: Run Python tests # Runs your test suite to verify code correctness
        run: pytest    # Runs all test files like test_*.py
        continue-on-error: true  # Optional (default behavior, but explicit) # Stop further steps from executing (unless continue-on-error: true is set)

      - name: Lint dockerfile with Hadolint
        uses: hadolint/hadolint-action@v3.1.0  #  Analyzes your Dockerfile for syntax issues and bad practices
        with:
          dockerfile: Dockerfile               #  This found the issue - Update your Dockerfile to include the --no-cache-dir option:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3    # Sets up a more powerful Docker builder that supports caching and multi-platform builds

      - name: Build Docker image
        if: ${{ success() }}  # Only runs if tests passed
        run: docker build -t flask-docker-ci:latest .    # Builds a Docker image from your app using the Dockerfile

      - name: Run Docker container
        if: ${{ success() }}  # ⬅️ this means "only if all steps before this passed"
        run: docker run -d -p 5000:5000 flask-docker-ci  # Runs a container from the built image

      - name: Wait for Flask to be ready
        if: ${{ success() }}  # this means "only if all steps before this passed"
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:5000 > /dev/null; then
              echo "Flask app is ready"
              break
            fi
            echo "Waiting for server..."
            sleep 2
          done

      - name: Test app endpoint
        if: ${{ success() }}  # Only runs if tests passed
        run: curl http://localhost:5000  # Makes a test request to the app running inside the container to verify it's working (health check)
